JASDL: "Jason AgentSpeak-Description Logic"
Copyright (C) 2008 Thomas Klapiscak (t.g.klapiscak@durham.ac.uk)
JASDL is distributed under the LGPL license (see COPYING and COPYING.LESSER)


*** Running JASDL ***

Firstly, please check you are using the latest revision of the entire Jason trunk from the SVN before use.

To run a JASDL agent, its class-path must include all jars under the sub-directories: 
	* trunk/applications/jasdl-owlapi/lib
	* trunk/applications/jmca/lib
	* All standard Jason libraries, please ensure that these are built from the latest revision of the Jason trunk.	

The (unmodified) travel_agent example (trunk/applications/jasdl-owlapi/examples/travel_agent/config.mas2j) 
must be run in-situ within the Jason trunk. All necessary ant tasks will be performed by its custom build script.	
			
*** Configuring JASDL ***

Please refer to /trunk/jason/applications/jasdl-owlapi/examples/travel_agent/config.mas2j for an example of how to configure JASDL agents.



********************************************************
--- Directory Structure ---

The JASDL distribution is structured as such:
	
	README			- This file

	docs/
		mas2jconfig 	- Instructions on mas2j setup for a JASDL agent
		java		- Java docs for JASDL

	
		

********************************************************

*** Known issues ***

The -+ operator does not function properly. Until this problem is fixed the operation must be performed in two steps as shown here:
-+a;
becomes:
-a;
+a;

When TG is applied to complex test goals, unifications do not propagate correctly

Trigger generalisation is not properly applied when searching for an suitable failure event for intended means that are not in the top level of an intention.

Complex test goals resulting from queries against the ontology (those whose event has a SE-Literal, e.g. ?hotel(hilton)[o(travel)]), prevent their instantiating intention from properly generating failure events.


Any test queries (and hence ask messages) that might result in the trigger generalisation mechanism being employed will need to include the "jasdl_tg_cause(_)" annotation (the parameter will not be unified and so is best left anonymous for clarity). If future work deems this issue unavoidable, JASDL will make a pass through the plan library and add this annotation automatically where required so the developer need not worry about it.



Thank you for your interest in JASDL!
