
/* 
 *  Copyright (C) 2008 Thomas Klapiscak (t.g.klapiscak@durham.ac.uk)
 *  
 *  This file is part of JASDL.
 *
 *  JASDL is free software: you can redistribute it and/or modify
 *  it under the terms of the Lesser GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  JASDL is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  Lesser GNU General Public License for more details.
 *
 *  You should have received a copy of the Lesser GNU General Public License
 *  along with JASDL.  If not, see <http://www.gnu.org/licenses/>.
 *  
 */


/* Jason Project */
/* Note: Uses c-build.xml to automatically run ant jar task for jasdl and jmca so up-to-date versions are used
 */
MAS dalt08 {

    infrastructure: Centralised

    agents:
	       travel_agent 
       	   travel_agent.asl
	       [			
			jasdl_useBeliefRevision = "true", // use experimental DL-based belief revision mechanism
			
			/*
			 * To use FaCT++, set the below. Must have libFaCTPlusPlusJNI.so in /usr/lib (or the equivalent for Mac or Windows)
			 * FaCT++ support is buggy and incomplete. Defaults to Pellet (org.mindswap.pellet.owlapi.Reasoner), which seems to work
			 * must better
			 * jasdl_reasonerClass = "uk.ac.manchester.cs.factplusplus.owlapi.Reasoner",
			 */
			
		    jasdl_default_mapping_strategies="jasdl.bridge.alias.DecapitaliseMappingStrategy", // applied to incoming ontologies and those given no automapping

	       	jasdl_ontologies="travel",
			jasdl_travel_uri="http://www.dur.ac.uk/t.g.klapiscak/onts/travel.owl",
			
			/*jasdl_travel_mapping_strategies="jasdl.bridge.alias.DecapitaliseMappingStrategy",*/ // defaults can be overriden per-ontology here
			jasdl_travel_mapping_manual="small_beach=beach", // these manual mappings will override any automatic mappings made by strategies,
						
			// static trust ratings, mainly for testing purposes - likely to change
			jasdl_knownAgents = "tom,ben",
			jasdl_tom_trustRating="0.9",
			jasdl_ben_trustRating="0.4"
	       ]
	       agentArchClass jasdl.architecture.JasdlAgArch
	       agentClass jasdl.asSemantics.JasdlAgent
	       beliefBaseClass jasdl.bb.JasdlBeliefBase	       
	       #1;
		   
	       customer 
       	   customer.asl
	       [			
			/* jasdl_default_mapping_strategies="jasdl.bridge.alias.DecapitaliseMappingStrategy", */ // defaults to this
			jasdl_useBeliefRevision = "true",
		   
	       	jasdl_ontologies="holidays,places",
			jasdl_holidays_uri="http://www.dur.ac.uk/t.g.klapiscak/onts/travel.owl",
			jasdl_holidays_mapping_strategies="jasdl.bridge.alias.DecapitaliseMappingStrategy",
			jasdl_holidays_mapping_manual="small_beach=beach, luxuriousHotel=LuxuryHotel", // for demonstration of arbitrary primitive mappings being handled correctly
				
			
			jasdl_places_uri="http://www.dur.ac.uk/t.g.klapiscak/onts/places.owl",
			jasdl_places_mapping_strategies="jasdl.bridge.alias.DecapitaliseMappingStrategy"
			]
	       agentArchClass jasdl.architecture.JasdlAgArch
	       agentClass jasdl.asSemantics.JasdlAgent
	       beliefBaseClass jasdl.bb.JasdlBeliefBase	       
	       #1;		   
		   
		 classpath: "../../lib/**/*.jar";"../../../jmca/lib/jmca.jar";
}

